[metadata]
name = npe2
description = proposal for napari plugin refactor
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/tlambert03/npe2
author = Talley Lambert
author_email = talley.lambert@gmail.com
license = BSD-3-Clause
license_file = LICENSE
classifiers =
    Development Status :: 2 - Pre-Alpha
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
project_urls =
    Source Code =https://github.com/tlambert03/npe2

[options]
packages = find:
install_requires =
    PyYAML
    intervaltree
    psygnal
    pydantic
    typer
    importlib-metadata>=1.5.0;python_version < "3.8"
python_requires = >=3.7
setup_requires =
    setuptools-scm
zip_safe = False

[options.entry_points]
console_scripts =
    npe2 = npe2.cli:main

[options.extras_require]
dev =
    black
    flake8
    flake8-docstrings
    ipython
    isort
    jedi<0.18.0
    magicgui
    mypy
    numpy
    pre-commit
    pydocstyle
    pytest
    pytest-cov
    typer
testing =
    magicgui
    napari-svg
    numpy
    pytest
    pytest-cov

[bdist_wheel]
universal = 1

[flake8]
exclude = docs,_version.py,.eggs,examples
max-line-length = 88
docstring-convention = numpy
ignore = D100, D213, D401, D413, D107, W503

[isort]
profile = black
src_paths = npe2

[pydocstyle]
match_dir = npe2
convention = numpy
add_select = D402,D415,D417
ignore = D100, D213, D401, D413, D107

[tool:pytest]
addopts = -W error

[mypy]
files = npe2
warn_unused_configs = True
warn_unused_ignores = True
check_untyped_defs = True
implicit_reexport = False
show_column_numbers = True
show_error_codes = True
ignore_missing_imports = True

[coverage:report]
exclude_lines =
    pragma: no cover
    if TYPE_CHECKING:
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    @overload
    @abstractmethod
